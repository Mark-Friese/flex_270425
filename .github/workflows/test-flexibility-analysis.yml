name: Test Flexibility Analysis

on:
  push:
    branches: [ main, develop ]
    paths:
      - "firm_capacity_analysis/**"
      - ".github/workflows/test-flexibility-analysis.yml"
  pull_request:
    branches: [ main, develop ]
    paths:
      - "firm_capacity_analysis/**"
      - ".github/workflows/test-flexibility-analysis.yml"

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch all history for proper versioning
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # Install testing dependencies from the platform-independent file
        if [ -f firm_capacity_analysis/requirements-test.txt ]; then 
          pip install -r firm_capacity_analysis/requirements-test.txt
        else
          # Fallback if file doesn't exist yet
          pip install pytest pandas numpy matplotlib pyyaml
        fi
        
        # Install only non-platform specific requirements
        if [ -f requirements.txt ]; then
          # Skip platform-specific packages (pywin32)
          pip install $(grep -v "pywin32" requirements.txt | grep -v "^#")
        fi
        
    - name: Create output directories
      run: |
        mkdir -p firm_capacity_analysis/output/Monktonhall
        mkdir -p firm_capacity_analysis/tests/output
        mkdir -p firm_capacity_analysis/tests/reference_data/Monktonhall
        
    - name: Run reference dataset generation if needed
      run: |
        # Only run if reference data doesn't exist
        if [ ! -d "firm_capacity_analysis/tests/reference_data" ] || [ -z "$(ls -A firm_capacity_analysis/tests/reference_data)" ] || [ ! -f "firm_capacity_analysis/tests/reference_data/Monktonhall/competitions.json" ]; then
          echo "Generating reference datasets..."
          # Create minimal reference data with our script
          cd firm_capacity_analysis
          python tests/make_reference_data.py
        else
          echo "Reference datasets already exist."
        fi
        
    - name: Run tests
      run: |
        cd firm_capacity_analysis
        # Debug information
        pwd
        ls -la
        ls -la tests/
        python -c "import sys; print(sys.path)"
        # Run tests with additional debug information
        python -m pytest -v --collect-only tests/
        python -m pytest -v tests/
        
    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: success() || failure()  # Upload artifacts even if tests fail
      with:
        name: test-artifacts
        path: |
          firm_capacity_analysis/tests/output/
          firm_capacity_analysis/output/*/service_window_mwh.csv
